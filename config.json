{
    "server": {
        "ipAddress": "0.0.0.0",
        "port": 4880,
        "docRoot": "./public_html",
        "threads": 4
    },
    "configDb": {
        "path": "ogammaloggerconfig",
        "type": "PostgreSQL",
        "name": "",
        "host": "tsdb",
        "password": "78IkABSCEOdn/lBWrN15LPWXSxBdP8G4zk+SaNPzS9jn9tKlvkB4wowIm2hQGro=",
        "userName": "ogamma",
        "port": 5432,
        "initScript": "./init-config-db-postgre.sql",
        "connectionWaitTimeInSeconds": 5,
        "json": {
            "defaultdb": "postgres",
            "sslmode": "prefer"
        }
    },
    "configDb_example": {
        "type": "PostgreSQL",
        "dbName": "ogammaloggerconfig",
        "displayName": "Local PostgreSQL database",
        "host": "tsdb",
        "port": 5432,
        "userName": "ogamma",
        "password": "ogamma",
        "initScript": "./init-config-db-postgre.sql",
        "connectionWaitTimeInSeconds": 15
    },
    "appLog": {
        "fileName": "./data/[InstanceId]/logs/app-log.txt",
        "level": 2
    },
    "sdk": {
        "ioThreads": 2,
        "timerThreads": 16,
        "callbackThreads": 16,
        "certificatesRootFolder": "./data/[InstanceId]/PKI",
        "log": {
            "fileName": "./data/[InstanceId]/logs/sdk-log.txt",
            "level": 2
        }
    },
    "collector-agent": {
        "id": 1,
        "enabled": true
    },
    "rest-endpoint": {
        "enabled": true
    },
    "config-endpoint": {
        "enabled": true
    },
    "tsdb-disabled": false,
    "timeSeriesDataBases": [
        {
            "path": "./data/values.db",
            "type": "SQLite",
            "displayName": "SQLite"
        },
        {
            "type": "PostgreSQL",
            "displayName": "PostgreSQL database at host tsdb",
            "host": "tsdb",
            "port": 5432,
            "dbName": "ogammalogger",
            "userName": "ogamma",
            "password": "ogamma",
            "initScript": "./init-db-postgres.sql",
            "connectionWaitTimeInSeconds": 15,
            "numberOfValuesInWriteBatch": 1000,
            "maxWriteInterval": 500
        },
        {
            "type": "InfluxDb",
            "version": "1.7",
            "displayName": "InfluxDb 1.7 at localhost",
            "host": "influxdb",
            "port": 8086,
            "useSecureMode": false,
            "dbName": "ogammadb",
            "userName": "ogamma",
            "password": "ogamma",
            "connectionWaitTimeInSeconds": 15,
            "maxQueueSize": 20000,
            "numberOfValuesInWriteBatch": 5000,
            "maxWriteInterval": 500
        },
        {
            "type": "InfluxDb",
            "version": "2.0",
            "displayName": "InfluxDb 2.0 at localhost",
            "host": "influxdb2x",
            "port": 8086,
            "useSecureMode": false,
            "dbName": "ogammadb",
            "userName": "ogamma",
            "password": "ogamma123",
            "organization": "ogamma",
            "bucket": "ogamma",
            "precision": "ms",
            "connectionWaitTimeInSeconds": 15,
            "maxQueueSize": 20000,
            "numberOfValuesInWriteBatch": 5000,
            "maxWriteInterval": 500
        },
        {
            "type": "Kafka",
            "displayName": "Kafka database at localhost",
            "connectionWaitTimeInSeconds": 15,
            "maxQueueSize": 500000,
            "numberOfValuesInReadBatch": 1000,
            "numberOfValuesInWriteBatch": 1000,
            "maxWriteInterval": 500,
            "timeout": 10000,
            "userName": "user",
            "password": "bitnami",
            "host": "broker",
            "port": 9092,
            "default_key_value": "",
            "Kafka": {
                "topicNameGenerationMode": "1",
                "keyNameGenerationMode": "0",
                "broker.version.fallback": "0.10.0.0",
                "sasl.mechanisms": "PLAIN",
                "security.protocol": "PLAINTEXT",
                "client.id": "VisualLogger",
                "Producer": {
                    "timeout": 2000,
                    "auto.commit.interval.ms": 500,
                    "client.id": "VisualLogger-Producer"
                },
                "Consumer": {
                    "timeout": 500,
                    "client.id": "VisualLogger-Consumer",
                    "group.id": "VisualLogger",
                    "enable.auto.commit": false,
                    "auto.offset.reset": "latest",
                    "fetch.wait.max.ms": 10
                }
            }
        }
    ]
}